name: Build and Package Automation Panel

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup uv CLI & Python
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.2"
          python-version: "3.10"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate lockfile if missing (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ ! -f uv.lock ]; then uv lock; fi

      - name: Generate lockfile if missing (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          if (!(Test-Path -Path uv.lock)) { uv lock }

      - name: Create venv & install dependencies
        run: |
          uv venv --seed
          uv sync
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}

      - name: Install PyInstaller
        run: pip install pyinstaller
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}

      - name: Build single-file Linux binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --noconfirm \
            --onefile \
            --name AutomationPanel \
            app.py
        shell: bash

      - name: Build Windows directory package
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          pyinstaller --noconfirm --onedir `
            --name AutomationPanel-windows `
            --hidden-import=playwright_stealth `
            --hidden-import=patchright `
            --hidden-import=psutil `
            --hidden-import=tkinter `
            --hidden-import=customtkinter `
            app.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: |
            dist/AutomationPanel*
            dist/AutomationPanel-windows*
