name: Build and Release

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install global dependencies and PyInstaller
        run: |
          python -m pip install --upgrade pip uv pyinstaller
        shell: bash

      - name: Create and sync virtual environment (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          uv venv --seed
          & .\.venv\Scripts\Activate.ps1
          uv sync

      - name: Build binary on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          pyinstaller --noconfirm --onefile app.py --name AutomationPanel

      - name: Build binary on Windows
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          & .\.venv\Scripts\Activate.ps1
          pyinstaller --noconfirm --onedir --name AutomationPanel-windows \
            --hidden-import=playwright_stealth \
            --hidden-import=patchright \
            --hidden-import=psutil \
            --hidden-import=tkinter \
            --hidden-import=customtkinter \
            app.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          path: release-assets
          merge-multiple: true

      - name: Set release name
        id: rel
        run: echo "name=build-$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.rel.outputs.name }}
          name: ${{ steps.rel.outputs.name }}
          prerelease: true
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
