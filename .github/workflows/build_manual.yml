name: PyInstaller Auto-Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4

      # 2) Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 3) Install project & PyInstaller
      - name: Install project & PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pyinstaller

      # 4) Build binary
      - name: Build binary
        run: |
          pyinstaller --noconfirm --onefile app.py --name AutomationPanel-windows

      # 5) Prepare upload dir & move exe
      - name: Rename binary for Windows
        shell: cmd
        run: |
          mkdir upload
          move dist\AutomationPanel-windows.exe upload\AutomationPanel-windows.exe

      # 6) Upload artifact
      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: AutomationPanel-windows
          path: upload\AutomationPanel-windows.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: AutomationPanel-windows
          path: release-assets

      - name: Set release name
        id: rel
        run: echo "name=build-$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.rel.outputs.name }}
          name: ${{ steps.rel.outputs.name }}
          prerelease: true
          files: release-assets/AutomationPanel-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
