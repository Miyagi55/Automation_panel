#NOTE : successfully tested on in 506d4dfd7d379eb6fcf22c62a6485ba6b4ff2495 - 05/03/2025
# .github/workflows/windows-build.yml

name: Windows Build with PyInstaller & UV

on:
  push:
    branches:
      - master
      - dev-main
    paths:
      - 'app/**'
      - 'pyproject.toml'
      - 'build.bat'
      - 'start.bat'
      - 'AutomationPanel-windows.spec'
      - 'README.md'
  workflow_dispatch:

jobs:
  build:
    name: Build Windows EXE
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install UV CLI
        run: pip install uv

      - name: Create and sync virtual environment
        run: |
          uv venv --seed
          uv sync

      - name: Install Playwright browsers
        run: |
          .\.venv\Scripts\activate
          python -m playwright install --with-deps

      - name: Install PyInstaller
        run: .\.venv\Scripts\pip install pyinstaller

      - name: Build with PyInstaller using .spec
        run: |
          .\.venv\Scripts\pyinstaller AutomationPanel-windows.spec

      # Zip the build output so we can attach it to the release
      - name: Zip build output
        run: |
          Compress-Archive -Path dist/AutomationPanel-windows/** -DestinationPath AutomationPanel-windows-${{ github.ref_name }}.zip

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AutomationPanel-windows-${{ github.ref_name }}
          path: AutomationPanel-windows-${{ github.ref_name }}.zip

      # Create a GitHub Release automatically, tagging it with branch and run number
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-build-${{ github.run_number }}
          release_name: AutomationPanel Windows build on ${{ github.ref_name }}
          body: |
            **Branch:** ${{ github.ref_name }}
            **Commit SHA:** ${{ github.sha }}
            **Run Number:** ${{ github.run_number }}
            **Workflow:** ${{ github.workflow }}

      # Upload the zipped executable to the newly created release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AutomationPanel-windows-${{ github.ref_name }}.zip
          asset_name: AutomationPanel-windows-${{ github.ref_name }}.zip
          asset_content_type: application/zip
