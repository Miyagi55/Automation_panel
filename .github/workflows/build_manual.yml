name: Windows PyInstaller Build

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install uv globally
        run: |
          python -m pip install --upgrade pip uv

      - name: Ensure .venv exists & seed pip
        run: |
          uv venv --seed
        # if this fails, exit the job
        shell: cmd

      - name: Prep venv executables in PATH
        run: |
          echo Adding venv to PATH...
          set "VENV_SCRIPTS=%CD%\.venv\Scripts"
          set "PATH=%VENV_SCRIPTS%;%PATH%"
          where python
          where pip
        shell: cmd

      - name: Sync project dependencies
        run: |
          uv sync
        shell: cmd

      - name: Install build tools into venv
        run: |
          pip install --upgrade pip pyinstaller
        shell: cmd

      - name: Clean old artifacts
        run: |
          if exist dist\%APP_NAME% rmdir /S /Q dist\%APP_NAME%
          if exist build rmdir /S /Q build
          if exist %APP_NAME%.spec del %APP_NAME%.spec
        env:
          APP_NAME: AutomationPanel-windows
        shell: cmd

      - name: Run PyInstaller
        run: |
          pyinstaller ^
            --noconsole ^
            --onedir ^
            --name AutomationPanel-windows ^
            --hidden-import=playwright_stealth ^
            --hidden-import=patchright ^
            --hidden-import=psutil ^
            --hidden-import=tkinter ^
            --hidden-import=customtkinter ^
            app.py
        shell: cmd

      - name: Upload distributable
        uses: actions/upload-artifact@v4
        with:
          name: AutomationPanel-windows
          path: dist/AutomationPanel-windows
